{"version":3,"file":"component---src-templates-blog-post-js-69a06f05c3f34030b85a.js","mappings":"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","sources":["webpack://why-not-zzuu/./src/components/bio.js","webpack://why-not-zzuu/./src/components/header.js","webpack://why-not-zzuu/./src/templates/blog-post.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n\n  return (\n    <div className=\"bio\">\n      <StaticImage\n        src=\"../../content/assets/profile-pic.jpg\"\n        height={50}\n        width={50}\n        layout=\"fixed\"\n        alt={author?.name || ``}\n        className=\"bio-avatar\"\n      />\n      {author?.name && (\n        <div>\n          <p>\n            <strong>{author.name}</strong>\n          </p>\n          <p>{author.summary}</p>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","import React from \"react\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\nimport clsx from \"clsx\"\n\nconst BasicProfile = props => {\n  const { frontmatter } = props\n  const { description, title, date } = frontmatter\n\n  return (\n    <>\n      <h1 itemProp=\"headline\" className=\"m-0 mb-4\">\n        {title}\n      </h1>\n      <p>{description}</p>\n      <p className=\"text-xs\">{date}</p>\n    </>\n  )\n}\n\nexport const Header = props => {\n  const { frontmatter } = props\n  const { banner, title, date, description } = frontmatter\n  const pattern = banner?.pattern ?? \"side\"\n  const placement = banner?.placement ?? \"start\"\n\n  if (banner && pattern === \"side\") {\n    return (\n      <header className=\"flex flex-col-reverse sm:flex-row sm:justify-between\">\n        <div className=\"sm:flex-initial\">\n          <BasicProfile frontmatter={frontmatter} />\n        </div>\n        <div className=\"flex justify-center mb-5 w-full sm:flex-none sm:w-4/12 sm:mb-2 sm:ml-4\">\n          <GatsbyImage\n            className=\"rounded-md\"\n            image={banner.url?.childImageSharp?.gatsbyImageData}\n            alt=\"Article banner\"\n          />\n        </div>\n      </header>\n    )\n  }\n\n  if (banner && pattern === \"top\") {\n    return (\n      <header className=\"-mx-4 sm:mx-0\">\n        <GatsbyImage\n          className=\"mb-4 sm:rounded-md\"\n          image={banner.url?.childImageSharp?.gatsbyImageData}\n          alt=\"Article banner\"\n        />\n        <div className=\"px-4 sm:px-0\">\n          <BasicProfile frontmatter={frontmatter} />\n        </div>\n      </header>\n    )\n  }\n\n  if (banner && pattern === \"background\") {\n    return (\n      <header className=\"-mx-4 sm:mx-0\">\n        <div className=\"h-60 grid sm:h-auto\">\n          <GatsbyImage\n            className=\"row-start-1 col-start-1\"\n            image={banner.url?.childImageSharp?.gatsbyImageData}\n            alt=\"Article banner\"\n          />\n          <div className=\"grid relative row-start-1 col-start-1 px-4 items-center\">\n            <div\n              className={clsx(\"text-white\", {\n                \"text-center\": placement === \"center\",\n                \"text-right\": placement === \"end\",\n              })}\n            >\n              <h1 itemProp=\"headline\" className=\"m-0 mb-4 text-white\">\n                {title}\n              </h1>\n              <p>{description}</p>\n            </div>\n            <p\n              className={clsx(\"text-xs text-white m-0\", {\n                \"text-center\": placement === \"center\",\n                \"text-right\": placement === \"end\",\n              })}\n            >\n              {date}\n            </p>\n          </div>\n        </div>\n      </header>\n    )\n  }\n\n  return (\n    <header>\n      <BasicProfile frontmatter={frontmatter} />\n    </header>\n  )\n}\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { Header } from '../components/header'\n\nconst BlogPostTemplate = ({ data, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const { previous, next } = data\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <Header frontmatter={post.frontmatter} />\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link className=\"no-underline\" to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link className=\"no-underline\" to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        banner {\n          url {\n            childImageSharp {\n              gatsbyImageData\n            }\n          }\n          pattern\n          placement\n        }\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"names":["author","useStaticQuery","site","siteMetadata","className","S","src","height","width","layout","alt","name","summary","BasicProfile","props","frontmatter","description","title","date","itemProp","Header","banner","pattern","placement","G","image","url","childImageSharp","gatsbyImageData","clsx","data","location","post","markdownRemark","siteTitle","previous","next","excerpt","itemScope","itemType","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","Link","to","fields","slug","rel"],"sourceRoot":""}